service: aws-python-django-dynamodb-api-project

frameworkVersion: '3'

plugins:
  - serverless-dotenv-plugin
  - serverless-prune-plugin
  - serverless-python-requirements
  - serverless-wsgi
useDotenv: true

custom:
  tableName: 'device-table-dev'
  dotenv:
    logging: false
  pythonRequirements:
    dockerizePip: non-linux
    zip: true
    fileName: requirements.txt
  stage: dev
  wsgi:
    app: app.app.wsgi.application
    packRequirements: false
  prune:
    automatic: true
    number: 3


provider:
  name: aws
  region: us-east-2
  stage: dev
  deploymentMethod: direct
  runtime: python3.11
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ Device_Table, Arn ]
  environment:
    USERS_TABLE: Device_Table

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - httpApi: '*'

# plugins:
#   - serverless-wsgi
#   - serverless-python-requirements

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: Device_Table

package:
  patterns:
    - '!node_modules/**'
    - '!.venv/**'
    - '!.git/**'

